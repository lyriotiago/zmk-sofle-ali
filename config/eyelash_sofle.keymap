#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#include <input/processors.dtsi>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 10    // 10


/ {
    macros {
        next_word: next_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp RIGHT_ARROW>
                , <&macro_release &kp LCTRL>
                ;
        };
        prev_word: prev_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp LEFT_ARROW>
                , <&macro_release &kp LCTRL>
                ;
        };
    };

    behaviors {
        mmv {
            acceleration-exponent = <1>;     // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                  // 0
        };

        msc {
            delay-ms = <0>;                  // 0
            acceleration-exponent = <1>;     // 0
            time-to-max-speed-ms = <1>;      // 300
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;
        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1           &kp N2        &kp N3        &kp N4        &kp N5                         &kp UP_ARROW                   &kp N6      &kp N7     &kp N8           &kp N9           &kp N0      &kp BACKSPACE
&kp TAB     &kp Q            &kp W         &kp E         &kp R         &kp T                          &kp DOWN_ARROW                 &kp Y       &kp U      &kp I            &kp O            &kp P       &kp BSLH
&mo 1       &kp A            &kp S         &kp D         &kp F         &kp G                          &kp LEFT_ARROW                 &kp H       &kp J      &kp K            &kp L            &kp SEMI    &kp APOS
&kp LSHFT   &kp Z            &kp X         &kp C         &kp V         &kp B                          &kp RIGHT_ARROW                &kp N       &kp M      &kp COMMA        &kp DOT          &kp FSLH    &kp ENTER
            &kp PRINTSCREEN  &kp LCTRL     &kp LEFT_GUI  &kp LEFT_ALT  &mo 1        &kp SPACE         &kp ENTER          &kp SPACE   &kp ENTER   &to 2      &prev_word       &next_word
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "default";
        };

        layer_1 {
            bindings = <
&kp F10     &kp F1           &kp F2           &kp F3           &kp F4           &kp F5                        &kp PG_UP                 &kp F6       &kp F7      &kp F8      &kp F9     &kp LPAR          &kp RPAR
&kp F11     &kp GRAVE        &mkp LCLK        &mkp MCLK        &mkp RCLK        &mkp MB4                      &kp PG_DN                 &kp PG_UP    &kp UP      &kp HOME    &kp PLUS   &kp LEFT_BRACKET  &kp RIGHT_BRACKET 
&kp F12     &kp TILDE        &trans           &trans           &trans           &mkp MB5                      &kp HOME                  &kp LEFT     &kp DOWN    &kp RIGHT   &kp UNDER  &kp LBRC          &kp RBRC
&kp K_SLEEP &rgb_ug RGB_OFF  &rgb_ug RGB_ON   &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI               &kp END                   &kp PG_DN    &kp INSERT  &kp END     &kp MINUS  &kp LESS_THAN     &kp GREATER_THAN
            &kp C_MUTE       &kp PRINTSCREEN  &kp CAPSLOCK     &trans           &trans             &trans     &kp INSERT   &kp EQUAL    &kp EQUAL    &kp MINUS   &kp PLUS    &kp UNDER
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "symbol";
        };

        layer_2 {
            bindings = <
&to 0       &bt BT_SEL 0   &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                      &rgb_ug RGB_BRI              &kp F6     &kp N7     &kp N8     &kp N9    &kp PLUS      &to 0
&trans      &bt BT_CLR     &bt BT_CLR_ALL   &trans           &trans           &trans                            &rgb_ug RGB_BRD              &trans     &kp N4     &kp N5     &kp N6    &kp MINUS     &sys_reset
&trans      &out OUT_USB   &out OUT_BLE     &trans           &rgb_ug RGB_SPI  &rgb_ug RGB_SPD                   &rgb_ug RGB_HUI              &trans     &kp N1     &kp N2     &kp N3    &kp ASTERISK  &soft_off
&trans      &sys_reset     &trans           &bootloader      &rgb_ug RGB_SAI  &rgb_ug RGB_SAD                   &rgb_ug RGB_HUD              &trans     &kp COMMA  &kp N0     &kp DOT   &kp FSLH      &bootloader
            &kp C_MUTE     &rgb_ug RGB_OFF  &rgb_ug RGB_ON   &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_TOG  &mkp LCLK        &kp SPACE   &kp ENTER  &to 0      &kp ENTER  &kp EQUAL
            >;
 
            sensor-bindings = <&scroll_encoder>;
            display-name = "config";
        };
    };
};